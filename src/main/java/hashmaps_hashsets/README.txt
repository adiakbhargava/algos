HashMaps and HashSets
=====================
HashMaps
--------
- aka HashTable, Dictionary (Python)
- is a data structure that pairs keys with values
- incredibly efficient for insert, lookup/search, update, and delete (CRUD)
  -> time complexity is O(1) for average case, and O(n) for worst-case.
  -> time complexity of O(n) is caused by collisions, collision is where two different keys produce the same hashcode (i.e. HashMap code will map multiple keys to the same hash and has to iterate through the entires linearly to find the correct key)
  -> hashcode is generated by hash functions, JAVA uses hashcode hash functions which are not meant for cryptography (example of secure hash functions are: SHA-1, SHA-256, SHA-512)
  -> secure hash functions are computationally expensive (i.e. they are slow, time complexity is higher and meant for security), and are collision resistant
  -> in JAVA, HashMap allows you to define the initial size (# of elements you want to store) and load factor to help with memory management (frequent resizing of size), this can help with latency
- properties:
  -> unordered/unsorted
  -> data is stored as key-value pairs
  -> can't store duplicate keys

HashSets
--------
- are a simpler form of HashMaps, in fact, in JAVA, they are implemented using a HashMap class
- store only keys versus key-value pairs in HashMaps
- very useful for checking the presence/absence of a key (contains item), storing unique elements, marking elements as used or visited, and checking for duplicates
- properties:
  -> unordered/unsorted
  -> data is stored as keys
  -> can't store duplicate keys

Intuition
---------
- pay attention to keywords such as frequency, unique, map, duplicate, dictionary, fast lookup for HashMap-HashSet applicability
- HashMap and HashSets are helper data structures used to store data, which can help reduce the time complexity of an algorithm versus the brute-force approach

Real-World Usage
----------------
- web browser cache ~ cache files, .css, images

Example Problems
----------------
- Pairsum Unordered (can also work on ordered set and can be considered as an alternative to the two pointer approach)
- Verify Sudoku Board (Uses properties of a HashSet to find duplicate values)
- Triplet Sum ()
- Zero Striping (involves the use of zero flags to indicate if a corresponding row or column needed to be zero-striped)
- Geometric Sequence Triplets (based off of having two HashMaps, one for finding potential values where x/r, and one for finding potential values where x*r)
- Longest Consecutive Chain of Numbers (involves identifying each element through the use of a HashSet)